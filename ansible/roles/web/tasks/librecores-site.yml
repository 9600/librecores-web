---
# general site
# web server
- name: Ensure nginx log directory exists
  file: dest=/var/log/nginx/librecores state=directory

- name: Change default nginx site
  template: src=nginx/librecores.tpl dest=/etc/nginx/sites-available/default
  notify: restart nginx

# symfony (main application)

# we need to work around ansible trying to chown a file on NFS, which
# is not possible. See https://github.com/ansible/ansible/issues/7372
- name: Create Symfony configuration (part I, populate template in temp folder)
  template: src=parameters.yml.j2 dest=/tmp/parameters.yml

- name: Create symfony configuration (part II, move to destination)
  command: mv /tmp/parameters.yml /var/www/site/app/config/parameters.yml

- name: Install dependencies through composer (development)
  command: composer install
  args:
    chdir: /var/www/site
  when: symfony_devel

- name: Install dependencies through composer (production)
  command: composer install --no-dev --optimize-autoloader
  environment:
    SYMFONY_ENV: prod
  args:
    chdir: /var/www/site
  when: not symfony_devel

- name: Clear symfony cache (production)
  command: php app/console cache:clear --env=prod --no-debug
  args:
    chdir: /var/www/site
  when: not symfony_devel

- name: Dump assetic assets (production)
  command: php app/console assetic:dump --env=prod --no-debug
  args:
    chdir: /var/www/site
  when: not symfony_devel

- name: (Re-)build supervisord for RabbitMQ (development)
  command: php app/console rabbitmq-supervisor:rebuild
  sudo: true
  sudo_user: "{{ web_user }}"
  args:
    chdir: /var/www/site
  when: symfony_devel

- name: (Re-)build supervisord for RabbitMQ (production)
  command: php app/console rabbitmq-supervisor:rebuild --env=prod --no-debug
  sudo: true
  sudo_user: "{{ web_user }}"
  args:
    chdir: /var/www/site
  when: not symfony_devel

- name: Add init script for RabbitMQ supervisord
  template:
    src: librecores-rabbitmq-supervisor
    dest: /etc/init.d
    owner: root
    group: root
    mode: 0755

- name: Enable init script librecores-rabbitmq-supervisor
  command: /usr/sbin/update-rc.d librecores-rabbitmq-supervisor defaults

# run this last to ensure all deployment-created directories are covered
- name: Ensure directory permissions of Symfony log and cache directories
  command: chown -R {{ web_user }} /var/www/site/app/{{ item }}
  with_items:
    - logs
    - cache
    - supervisor
  when: not is_vagrant_environment


# Install librecores planet generator
- name: Install extra packages for librecores-planet
  apt:  pkg={{ item }} state=installed
  with_items:
    - python-libxslt1

- name: Update planet every 30 minutes through cronjob
  cron:
    minute="*/30" hour="*" weekday="*"
    name="Update Planet LibreCores"
    cron_file="librecores-planet-update"
    user="{{ web_user }}"
    job="/var/www/planet/generate.sh"

- name: Ensure directory permissions of planet cache directories
  command: chown -R {{ web_user }} /var/www/planet/cache
  when: not is_vagrant_environment

- name: Ensure directory permissions of web-accessible planet output directory
  command: chown -R {{ web_user }} /var/www/site/web/planet
  when: not is_vagrant_environment
